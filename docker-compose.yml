services:  
  api:
    build:
      context: .
      dockerfile: Dockerfile
    image: luongnguyenminhan/enteviu-api:latest
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - audio_data:/data/audio  # Add shared volume for audio files
    environment:
      - ENV=development
      - RUN_TESTS=false  
      - TZ=Asia/Ho_Chi_Minh
      - DOCKER_ENVIRONMENT=True
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - QDRANT_URL=http://qdrant:6333 # Changed from 6334 to 6333
      - QDRANT_COLLECTION=agentic_rag_kb
      - PYTHONDONTWRITEBYTECODE=1
    env_file:
      - .env
    # Add extra_hosts to ensure host.docker.internal works on all Docker environments
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: always
    networks:
      - enterviu-network

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY:-minioadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY:-minioadmin}
    command: server /data --console-address ":9001"
    networks:
      - enterviu-network

  # celery:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   image: luongnguyenminhan/enteviu-celery:latest
  #   volumes:
  #     - .:/app
  #     - audio_data:/data/audio  # Add shared volume for audio files
  #   environment:
  #     - ENV=development
  #     - SERVICE_TYPE=celery_worker
  #     - CELERY_BROKER_URL=redis://redis-enterviu:6379/0
  #     - CELERY_RESULT_BACKEND=redis://redis-enterviu:6379/0
  #     - QDRANT_URL=http://qdrant:6333 # Changed from 6334 to 6333
  #     - QDRANT_COLLECTION=agentic_rag_kb
  #     - CELERY_WORKER_CONCURRENCY=4  # Set concurrency for Celery workers
  #   env_file:
  #     - .env
  #   networks:
  #     - enterviu-network
  #   depends_on:
  #     redis-enterviu:
  #       condition: service_started
  #     api:
  #       condition: service_started
  #   restart: always

  # redis-enterviu:
    # image: redis:latest
    # container_name: redis
    # ports:
    #   - "6379:6379"
    # networks:
    #   - enterviu-network
    # restart: always

networks:
  enterviu-network:
    driver: bridge

volumes:
  audio_data:
  minio-data:
